import Foundation

// swiftlint:disable file_length
public struct Country: Codable, Equatable {
    public let name: String
    public let code: String
    
    public var isAVS: Bool {
        Self.avsCodes.contains(code)
    }
    
    public init(name: String, code: String) {
        self.name = name
        self.code = code
    }
    
    public init?(code: String?) {
        guard let code = code, let country = Self.all.first(where: { $0.code == code }) else {
            return nil
        }
        self = country
    }
}

extension Country {
    public static var avsCodes: [String] = ["US", "CA", "GB"]
    
    public static var sortedAll: [Country] = {
        Country.all.sorted {
            $0.name.localizedCompare($1.name) == .orderedAscending
        }
    }()
}

extension Country {
    public static var all: [Country] = [
        .init(name: "Afghanistan", code: "AF"),
        .init(name: "Åland Islands", code: "AX"),
        .init(name: "Albania", code: "AL"),
        .init(name: "Algeria", code: "DZ"),
        .init(name: "American Samoa", code: "AS"),
        .init(name: "Andorra", code: "AD"),
        .init(name: "Angola", code: "AO"),
        .init(name: "Anguilla", code: "AI"),
        .init(name: "Antarctica", code: "AQ"),
        .init(name: "Antigua and Barbuda", code: "AG"),
        .init(name: "Argentina", code: "AR"),
        .init(name: "Armenia", code: "AM"),
        .init(name: "Aruba", code: "AW"),
        .init(name: "Australia", code: "AU"),
        .init(name: "Austria", code: "AT"),
        .init(name: "Azerbaijan", code: "AZ"),
        .init(name: "Bahamas", code: "BS"),
        .init(name: "Bahrain", code: "BH"),
        .init(name: "Bangladesh", code: "BD"),
        .init(name: "Barbados", code: "BB"),
        .init(name: "Belarus", code: "BY"),
        .init(name: "Belgium", code: "BE"),
        .init(name: "Belize", code: "BZ"),
        .init(name: "Benin", code: "BJ"),
        .init(name: "Bermuda", code: "BM"),
        .init(name: "Bhutan", code: "BT"),
        .init(name: "Bolivia (Plurinational State of)", code: "BO"),
        .init(name: "Bonaire Sint Eustatius Saba", code: "BQ"),
        .init(name: "Bosnia and Herzegovina", code: "BA"),
        .init(name: "Botswana", code: "BW"),
        .init(name: "Bouvet Island", code: "BV"),
        .init(name: "Brazil", code: "BR"),
        .init(name: "British Indian Ocean Territory", code: "IO"),
        .init(name: "Brunei Darussalam", code: "BN"),
        .init(name: "Bulgaria", code: "BG"),
        .init(name: "Burkina Faso", code: "BF"),
        .init(name: "Burundi", code: "BI"),
        .init(name: "Cabo Verde", code: "CV"),
        .init(name: "Cambodia", code: "KH"),
        .init(name: "Cameroon", code: "CM"),
        .init(name: "Canada", code: "CA"),
        .init(name: "Cayman Islands", code: "KY"),
        .init(name: "Central African Republic", code: "CF"),
        .init(name: "Chad", code: "TD"),
        .init(name: "Chile", code: "CL"),
        .init(name: "China", code: "CN"),
        .init(name: "Christmas Island", code: "CX"),
        .init(name: "Cocos (Keeling) Islands", code: "CC"),
        .init(name: "Colombia", code: "CO"),
        .init(name: "Comoros", code: "KM"),
        .init(name: "Congo", code: "CG"),
        .init(name: "Congo, Democratic Republic of the", code: "CD"),
        .init(name: "Cook Islands", code: "CK"),
        .init(name: "Costa Rica", code: "CR"),
        .init(name: "Côte d\"Ivoire", code: "CI"),
        .init(name: "Croatia", code: "HR"),
        .init(name: "Cuba", code: "CU"),
        .init(name: "Curaçao", code: "CW"),
        .init(name: "Cyprus", code: "CY"),
        .init(name: "Czechia", code: "CZ"),
        .init(name: "Denmark", code: "DK"),
        .init(name: "Djibouti", code: "DJ"),
        .init(name: "Dominica", code: "DM"),
        .init(name: "Dominican Republic", code: "DO"),
        .init(name: "Ecuador", code: "EC"),
        .init(name: "Egypt", code: "EG"),
        .init(name: "El Salvador", code: "SV"),
        .init(name: "Equatorial Guinea", code: "GQ"),
        .init(name: "Eritrea", code: "ER"),
        .init(name: "Estonia", code: "EE"),
        .init(name: "Eswatini", code: "SZ"),
        .init(name: "Ethiopia", code: "ET"),
        .init(name: "Falkland Islands", code: "FK"),
        .init(name: "Faroe Islands", code: "FO"),
        .init(name: "Fiji", code: "FJ"),
        .init(name: "Finland", code: "FI"),
        .init(name: "France", code: "FR"),
        .init(name: "French Guiana", code: "GF"),
        .init(name: "French Polynesia", code: "PF"),
        .init(name: "French Southern Territories", code: "TF"),
        .init(name: "Gabon", code: "GA"),
        .init(name: "Gambia", code: "GM"),
        .init(name: "Georgia", code: "GE"),
        .init(name: "Germany", code: "DE"),
        .init(name: "Ghana", code: "GH"),
        .init(name: "Gibraltar", code: "GI"),
        .init(name: "Greece", code: "GR"),
        .init(name: "Greenland", code: "GL"),
        .init(name: "Grenada", code: "GD"),
        .init(name: "Guadeloupe", code: "GP"),
        .init(name: "Guam", code: "GU"),
        .init(name: "Guatemala", code: "GT"),
        .init(name: "Guernsey", code: "GG"),
        .init(name: "Guinea", code: "GN"),
        .init(name: "Guinea-Bissau", code: "GW"),
        .init(name: "Guyana", code: "GY"),
        .init(name: "Haiti", code: "HT"),
        .init(name: "Heard Island and McDonald Islands", code: "HM"),
        .init(name: "Holy See", code: "VA"),
        .init(name: "Honduras", code: "HN"),
        .init(name: "Hong Kong", code: "HK"),
        .init(name: "Hungary", code: "HU"),
        .init(name: "Iceland", code: "IS"),
        .init(name: "India", code: "IN"),
        .init(name: "Indonesia", code: "ID"),
        .init(name: "Iraq", code: "IQ"),
        .init(name: "Ireland", code: "IE"),
        .init(name: "Isle of Man", code: "IM"),
        .init(name: "Israel", code: "IL"),
        .init(name: "Italy", code: "IT"),
        .init(name: "Jamaica", code: "JM"),
        .init(name: "Japan", code: "JP"),
        .init(name: "Jersey", code: "JE"),
        .init(name: "Jordan", code: "JO"),
        .init(name: "Kazakhstan", code: "KZ"),
        .init(name: "Kenya", code: "KE"),
        .init(name: "Kiribati", code: "KI"),
        .init(name: "Korea, Republic of", code: "KR"),
        .init(name: "Kuwait", code: "KW"),
        .init(name: "Kyrgyzstan", code: "KG"),
        .init(name: "Lao People\"s Democratic Republic", code: "LA"),
        .init(name: "Latvia", code: "LV"),
        .init(name: "Lebanon", code: "LB"),
        .init(name: "Lesotho", code: "LS"),
        .init(name: "Liberia", code: "LR"),
        .init(name: "Libya", code: "LY"),
        .init(name: "Liechtenstein", code: "LI"),
        .init(name: "Lithuania", code: "LT"),
        .init(name: "Luxembourg", code: "LU"),
        .init(name: "Macao", code: "MO"),
        .init(name: "Madagascar", code: "MG"),
        .init(name: "Malawi", code: "MW"),
        .init(name: "Malaysia", code: "MY"),
        .init(name: "Maldives", code: "MV"),
        .init(name: "Mali", code: "ML"),
        .init(name: "Malta", code: "MT"),
        .init(name: "Marshall Islands", code: "MH"),
        .init(name: "Martinique", code: "MQ"),
        .init(name: "Mauritania", code: "MR"),
        .init(name: "Mauritius", code: "MU"),
        .init(name: "Mayotte", code: "YT"),
        .init(name: "Mexico", code: "MX"),
        .init(name: "Micronesia (Federated States of)", code: "FM"),
        .init(name: "Moldova, Republic of", code: "MD"),
        .init(name: "Monaco", code: "MC"),
        .init(name: "Mongolia", code: "MN"),
        .init(name: "Montenegro", code: "ME"),
        .init(name: "Montserrat", code: "MS"),
        .init(name: "Morocco", code: "MA"),
        .init(name: "Mozambique", code: "MZ"),
        .init(name: "Myanmar", code: "MM"),
        .init(name: "Namibia", code: "NA"),
        .init(name: "Nauru", code: "NR"),
        .init(name: "Nepal", code: "NP"),
        .init(name: "Netherlands", code: "NL"),
        .init(name: "New Caledonia", code: "NC"),
        .init(name: "New Zealand", code: "NZ"),
        .init(name: "Nicaragua", code: "NI"),
        .init(name: "Niger", code: "NE"),
        .init(name: "Nigeria", code: "NG"),
        .init(name: "Niue", code: "NU"),
        .init(name: "Norfolk Island", code: "NF"),
        .init(name: "Northern Mariana Islands", code: "MP"),
        .init(name: "North Macedonia", code: "MK"),
        .init(name: "Norway", code: "NO"),
        .init(name: "Oman", code: "OM"),
        .init(name: "Pakistan", code: "PK"),
        .init(name: "Palau", code: "PW"),
        .init(name: "Palestine, State of", code: "PS"),
        .init(name: "Panama", code: "PA"),
        .init(name: "Papua New Guinea", code: "PG"),
        .init(name: "Paraguay", code: "PY"),
        .init(name: "Peru", code: "PE"),
        .init(name: "Philippines", code: "PH"),
        .init(name: "Pitcairn", code: "PN"),
        .init(name: "Poland", code: "PL"),
        .init(name: "Portugal", code: "PT"),
        .init(name: "Puerto Rico", code: "PR"),
        .init(name: "Qatar", code: "QA"),
        .init(name: "Réunion", code: "RE"),
        .init(name: "Romania", code: "RO"),
        .init(name: "Russian Federation", code: "RU"),
        .init(name: "Rwanda", code: "RW"),
        .init(name: "Saint Barthélemy", code: "BL"),
        .init(name: "Saint Helena Ascension Island Tristan da Cunha", code: "SH"),
        .init(name: "Saint Kitts and Nevis", code: "KN"),
        .init(name: "Saint Lucia", code: "LC"),
        .init(name: "Saint Martin (French part)", code: "MF"),
        .init(name: "Saint Pierre and Miquelon", code: "PM"),
        .init(name: "Saint Vincent and the Grenadines", code: "VC"),
        .init(name: "Samoa", code: "WS"),
        .init(name: "San Marino", code: "SM"),
        .init(name: "Sao Tome and Principe", code: "ST"),
        .init(name: "Saudi Arabia", code: "SA"),
        .init(name: "Senegal", code: "SN"),
        .init(name: "Serbia", code: "RS"),
        .init(name: "Seychelles", code: "SC"),
        .init(name: "Sierra Leone", code: "SL"),
        .init(name: "Singapore", code: "SG"),
        .init(name: "Sint Maarten", code: "SX"),
        .init(name: "Slovakia", code: "SK"),
        .init(name: "Slovenia", code: "SI"),
        .init(name: "Solomon Islands", code: "SB"),
        .init(name: "Somalia", code: "SO"),
        .init(name: "South Africa", code: "ZA"),
        .init(name: "South Georgia and the South Sandwich Islands", code: "GS"),
        .init(name: "South Sudan", code: "SS"),
        .init(name: "Spain", code: "ES"),
        .init(name: "Sri Lanka", code: "LK"),
        .init(name: "Sudan", code: "SD"),
        .init(name: "Suriname", code: "SR"),
        .init(name: "Svalbard Jan Mayen", code: "SJ"),
        .init(name: "Sweden", code: "SE"),
        .init(name: "Switzerland", code: "CH"),
        .init(name: "Syrian Arab Republic", code: "SY"),
        .init(name: "Taiwan", code: "TW"),
        .init(name: "Tajikistan", code: "TJ"),
        .init(name: "Tanzania, United Republic of", code: "TZ"),
        .init(name: "Thailand", code: "TH"),
        .init(name: "Timor-Leste", code: "TL"),
        .init(name: "Togo", code: "TG"),
        .init(name: "Tokelau", code: "TK"),
        .init(name: "Tonga", code: "TO"),
        .init(name: "Trinidad and Tobago", code: "TT"),
        .init(name: "Tunisia", code: "TN"),
        .init(name: "Turkey", code: "TR"),
        .init(name: "Turkmenistan", code: "TM"),
        .init(name: "Turks and Caicos Islands", code: "TC"),
        .init(name: "Tuvalu", code: "TV"),
        .init(name: "Uganda", code: "UG"),
        .init(name: "Ukraine", code: "UA"),
        .init(name: "United Arab Emirates", code: "AE"),
        .init(name: "United Kingdom of Great Britain and Northern Ireland", code: "GB"),
        .init(name: "United States Minor Outlying Islands", code: "UM"),
        .init(name: "United States of America", code: "US"),
        .init(name: "Uruguay", code: "UY"),
        .init(name: "Uzbekistan", code: "UZ"),
        .init(name: "Vanuatu", code: "VU"),
        .init(name: "Venezuela (Bolivarian Republic of)", code: "VE"),
        .init(name: "Vietnam", code: "VN"),
        .init(name: "Virgin Islands (British)", code: "VG"),
        .init(name: "Virgin Islands", code: "VI"),
        .init(name: "Wallis and Futuna", code: "WF"),
        .init(name: "Western Sahara", code: "EH"),
        .init(name: "Yemen", code: "YE"),
        .init(name: "Zambia", code: "ZM"),
        .init(name: "Zimbabwe", code: "ZW")
    ]
}

// Country with prefix codes
extension Country {
    public var phonePrefix: String {
        Self.phonePrefixes[code] ?? "+66"
    }
    
    public static var phonePrefixes: [String: String] = [
        "AD": "+376",
        "AE": "+971",
        "AF": "+93",
        "AG": "+1",
        "AI": "+1",
        "AL": "+355",
        "AM": "+374",
        "AO": "+244",
        "AQ": "+672",
        "AR": "+54",
        "AS": "+1",
        "AT": "+43",
        "AU": "+61",
        "AW": "+297",
        "AX": "+358",
        "AZ": "+994",
        "BA": "+387",
        "BB": "+1",
        "BD": "+880",
        "BE": "+32",
        "BF": "+226",
        "BG": "+359",
        "BH": "+973",
        "BI": "+257",
        "BJ": "+229",
        "BL": "+590",
        "BM": "+1",
        "BN": "+673",
        "BO": "+591",
        "BQ": "+599",
        "BR": "+55",
        "BS": "+1",
        "BT": "+975",
        "BV": "+47",
        "BW": "+267",
        "BY": "+375",
        "BZ": "+501",
        "CA": "+1",
        "CC": "+61",
        "CD": "+243",
        "CF": "+236",
        "CG": "+242",
        "CH": "+41",
        "CI": "+225",
        "CK": "+682",
        "CL": "+56",
        "CM": "+237",
        "CN": "+86",
        "CO": "+57",
        "CR": "+506",
        "CU": "+53",
        "CV": "+238",
        "CW": "+599",
        "CX": "+61",
        "CY": "+357",
        "CZ": "+420",
        "DE": "+49",
        "DJ": "+253",
        "DK": "+45",
        "DM": "+1",
        "DO": "+1",
        "DZ": "+213",
        "EC": "+593",
        "EE": "+372",
        "EG": "+20",
        "EH": "+212",
        "ER": "+291",
        "ES": "+34",
        "ET": "+251",
        "FI": "+358",
        "FJ": "+679",
        "FK": "+500",
        "FM": "+691",
        "FO": "+298",
        "FR": "+33",
        "GA": "+241",
        "GB": "+44",
        "GD": "+1",
        "GE": "+995",
        "GF": "+594",
        "GG": "+44",
        "GH": "+233",
        "GI": "+350",
        "GL": "+299",
        "GM": "+220",
        "GN": "+224",
        "GP": "+590",
        "GQ": "+240",
        "GR": "+30",
        "GS": "+500",
        "GT": "+502",
        "GU": "+1",
        "GW": "+245",
        "GY": "+592",
        "HK": "+852",
        "HM": "+672",
        "HN": "+504",
        "HR": "+385",
        "HT": "+509",
        "HU": "+36",
        "ID": "+62",
        "IE": "+353",
        "IL": "+972",
        "IM": "+44",
        "IN": "+91",
        "IO": "+246",
        "IQ": "+964",
        "IS": "+354",
        "IT": "+39",
        "JE": "+44",
        "JM": "+1",
        "JO": "+962",
        "JP": "+81",
        "KE": "+254",
        "KG": "+996",
        "KH": "+855",
        "KI": "+686",
        "KM": "+269",
        "KN": "+1",
        "KR": "+82",
        "KW": "+965",
        "KY": "+1",
        "KZ": "+7",
        "LA": "+856",
        "LB": "+961",
        "LC": "+1",
        "LI": "+423",
        "LK": "+94",
        "LR": "+231",
        "LS": "+266",
        "LT": "+370",
        "LU": "+352",
        "LV": "+371",
        "LY": "+218",
        "MA": "+212",
        "MC": "+377",
        "MD": "+373",
        "ME": "+382",
        "MF": "+590",
        "MG": "+261",
        "MH": "+692",
        "MK": "+389",
        "ML": "+223",
        "MM": "+95",
        "MN": "+976",
        "MO": "+853",
        "MP": "+1",
        "MQ": "+596",
        "MR": "+222",
        "MS": "+1",
        "MT": "+356",
        "MU": "+230",
        "MV": "+960",
        "MW": "+265",
        "MX": "+52",
        "MY": "+60",
        "MZ": "+258",
        "NA": "+264",
        "NC": "+687",
        "NE": "+227",
        "NF": "+672",
        "NG": "+234",
        "NI": "+505",
        "NL": "+31",
        "NO": "+47",
        "NP": "+977",
        "NR": "+674",
        "NU": "+683",
        "NZ": "+64",
        "OM": "+968",
        "PA": "+507",
        "PE": "+51",
        "PF": "+689",
        "PG": "+675",
        "PH": "+63",
        "PK": "+92",
        "PL": "+48",
        "PM": "+508",
        "PN": "+64",
        "PR": "+1",
        "PS": "+970",
        "PT": "+351",
        "PW": "+680",
        "PY": "+595",
        "QA": "+974",
        "RE": "+262",
        "RO": "+40",
        "RS": "+381",
        "RU": "+7",
        "RW": "+250",
        "SA": "+966",
        "SB": "+677",
        "SC": "+248",
        "SD": "+249",
        "SE": "+46",
        "SG": "+65",
        "SH": "+290",
        "SI": "+386",
        "SJ": "+47",
        "SK": "+421",
        "SL": "+232",
        "SM": "+378",
        "SN": "+221",
        "SO": "+252",
        "SR": "+597",
        "SS": "+211",
        "ST": "+239",
        "SV": "+503",
        "SX": "+1",
        "SY": "+963",
        "SZ": "+268",
        "TC": "+1",
        "TD": "+235",
        "TF": "+262",
        "TG": "+228",
        "TH": "+66",
        "TJ": "+992",
        "TK": "+690",
        "TL": "+670",
        "TM": "+993",
        "TN": "+216",
        "TO": "+676",
        "TR": "+90",
        "TT": "+1",
        "TV": "+688",
        "TW": "+886",
        "TZ": "+255",
        "UA": "+380",
        "UG": "+256",
        "UM": "+1",
        "US": "+1",
        "UY": "+598",
        "UZ": "+998",
        "VA": "+379",
        "VC": "+1",
        "VE": "+58",
        "VG": "+1",
        "VI": "+1",
        "VN": "+84",
        "VU": "+678",
        "WF": "+681",
        "WS": "+685",
        "YE": "+967",
        "YT": "+262",
        "ZA": "+27",
        "ZM": "+260",
        "ZW": "+263"
    ]
}
